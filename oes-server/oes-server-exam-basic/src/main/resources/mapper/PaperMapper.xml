<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.4//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.oes.server.exam.basic.mapper.PaperMapper">
  <resultMap id="baseMap" type="com.oes.common.core.exam.entity.Paper">
    <result column="paper_id" property="paperId"/>
    <result column="paper_name" property="paperName"/>
    <result column="paper_score" property="paperScore"/>
    <result column="start_time" property="startTime"/>
    <result column="end_time" property="endTime"/>
    <result column="minute" property="minute"/>
    <result column="create_time" property="createTime"/>
    <result column="update_time" property="updateTime"/>
    <result column="status" property="status"/>
    <result column="course_id" property="courseId"/>
    <result column="is_random" property="isRandom"/>
    <result column="type" property="type"/>
    <result column="course_name" property="courseName"/>
    <result column="dept_ids" property="deptIds"/>
    <result column="creator_name" property="creatorName"/>
    <result column="term_id" property="termId"/>
    <result column="term_name" property="termName"/>
  </resultMap>

  <resultMap id="baseMap2" type="com.oes.common.core.exam.entity.Paper">
    <result column="paper_id" property="paperId"/>
    <result column="paper_name" property="paperName"/>
    <result column="paper_score" property="paperScore"/>
    <result column="start_time" property="startTime"/>
    <result column="end_time" property="endTime"/>
    <result column="minute" property="minute"/>
    <result column="creator_name" property="courseName"/>
    <result column="create_time" property="createTime"/>
    <result column="update_time" property="updateTime"/>
    <result column="status" property="status"/>
    <result column="course_id" property="courseId"/>
    <result column="type" property="type"/>
    <result column="course_name" property="courseName"/>
    <result column="term_id" property="termId"/>
    <result column="term_name" property="termName"/>
  </resultMap>

  <sql id="baseSql">
    select tp.paper_id,
           tp.paper_name,
           tp.paper_score,
           tp.start_time,
           tp.end_time,
           tp.minute,
           tp.creator_name,
           tp.create_time,
           tp.update_time,
           tp.status,
           tp.course_id,
           tc.course_name,
           tp.type,
           tp.is_random,
           tp.term_id,
           tt.term_name,
           group_concat(tpd.dept_id) as dept_ids
    from t_paper tp
           left join t_course tc on (tp.course_id = tc.course_id)
           left join t_paper_dept tpd on (tp.paper_id = tpd.paper_id)
           left join t_term tt on tp.term_id = tt.term_id
    where 1 = 1
  </sql>

  <sql id="baseSql2">
    select tp.paper_id,
           tp.paper_name,
           tp.paper_score,
           tp.start_time,
           tp.end_time,
           tp.minute,
           tp.status,
           tp.course_id,
           tc.course_name,
           tp.type,
           tp.term_id,
           tt.term_name
    from t_paper tp
           left join t_course tc on (tp.course_id = tc.course_id)
           left join t_term tt on tp.term_id = tt.term_id
    where 1 = 1
  </sql>

  <select id="pagePaper" parameterType="com.oes.common.core.exam.entity.query.QueryPaperDto"
    resultMap="baseMap">
    <include refid="baseSql"/>
    <if test="paper.paperName != null and paper.paperName != ''">
      and tp.paper_name like concat('%',#{paper.paperName,jdbcType=VARCHAR},'%')
    </if>
    <if test="paper.termId != null">
      and tt.term_id = #{paper.termId,jdbcType=BIGINT}
    </if>
    <if test="paper.status != null">
      and tp.status = #{paper.status,jdbcType=INTEGER}
    </if>
    <if test="paper.filterEnd == true ">
      and (tp.end_time &gt;= now())
    </if>
    GROUP BY tp.paper_id
  </select>

  <select id="selectByPaperId" parameterType="long" resultMap="baseMap2">
    <include refid="baseSql2"/>
    AND tp.paper_id = #{paperId,jdbcType=BIGINT}
  </select>

  <select id="selectTopTenPaper" resultType="map">
    select count(*)       value,
           tc.course_name name
    from t_paper tp
           left join t_course tc on (tp.course_id = tc.course_id)
    group by tp.course_id
    order by tp.course_id
    limit 0, 10
  </select>
</mapper>